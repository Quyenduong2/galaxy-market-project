import { useState } from 'react';
import { Link } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { 
  User, 
  ShoppingBag, 
  Heart,
  Settings,
  Download,
  Eye,
  Star,
  Package
} from 'lucide-react';
import Header from '@/components/Header';
import Footer from '@/components/Footer';

const UserDashboard = () => {
  const [activeTab, setActiveTab] = useState('profile');
  const [isEditing, setIsEditing] = useState(false);

  // Mock user data
  const user = {
    name: 'Nguyễn Văn Nam',
    email: 'nam.nguyen@email.com',
    phone: '0123456789',
    joinDate: '15/03/2024',
    totalOrders: 12,
    totalSpent: '15,600,000 VNĐ',
    avatar: '/placeholder.svg'
  };

  const orderHistory = [
    { 
      id: '#001', 
      product: 'Tài khoản LOL Rank Kim Cương', 
      date: '20/12/2024', 
      amount: '1,200,000 VNĐ', 
      status: 'completed',
      downloadLink: '#'
    },
    { 
      id: '#002', 
      product: 'Tài khoản PUBG Rank Ace', 
      date: '18/12/2024', 
      amount: '800,000 VNĐ', 
      status: 'processing',
      downloadLink: null
    },
    { 
      id: '#003', 
      product: 'Tài khoản Valorant Rank Immortal', 
      date: '15/12/2024', 
      amount: '1,500,000 VNĐ', 
      status: 'completed',
      downloadLink: '#'
    },
  ];

  const wishlist = [
    { 
      id: 1, 
      name: 'Tài khoản CS:GO Prime', 
      game: 'Counter-Strike: Global Offensive', 
      price: '450,000 VNĐ',
      image: '/placeholder.svg',
      inStock: true
    },
    { 
      id: 2, 
      name: 'Tài khoản Dota 2 Ancient', 
      game: 'Dota 2', 
      price: '600,000 VNĐ',
      image: '/placeholder.svg',
      inStock: false
    },
  ];

  const recentViewed = [
    { 
      id: 1, 
      name: 'Tài khoản Apex Legends Diamond', 
      game: 'Apex Legends', 
      price: '700,000 VNĐ',
      image: '/placeholder.svg'
    },
    { 
      id: 2, 
      name: 'Tài khoản Overwatch 2 Master', 
      game: 'Overwatch 2', 
      price: '900,000 VNĐ',
      image: '/placeholder.svg'
    },
  ];

  return (
    <div className="min-h-screen bg-background">
      <Header />
      
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold bg-gaming-gradient bg-clip-text text-transparent">
            Tài khoản của tôi
          </h1>
          <p className="text-muted-foreground mt-2">
            Quản lý thông tin cá nhân và đơn hàng của bạn
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* Sidebar */}
          <div className="lg:col-span-1">
            <Card>
              <CardContent className="p-6">
                <div className="flex flex-col items-center space-y-4">
                  <Avatar className="h-20 w-20">
                    <AvatarImage src={user.avatar} alt={user.name} />
                    <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>
                  </Avatar>
                  <div className="text-center">
                    <h3 className="font-semibold">{user.name}</h3>
                    <p className="text-sm text-muted-foreground">{user.email}</p>
                  </div>
                </div>
                
                <div className="mt-6 space-y-2">
                  <Button 
                    variant={activeTab === 'profile' ? 'default' : 'ghost'} 
                    className="w-full justify-start"
                    onClick={() => setActiveTab('profile')}
                  >
                    <User className="h-4 w-4 mr-2" />
                    Thông tin cá nhân
                  </Button>
                  <Button 
                    variant={activeTab === 'orders' ? 'default' : 'ghost'} 
                    className="w-full justify-start"
                    onClick={() => setActiveTab('orders')}
                  >
                    <ShoppingBag className="h-4 w-4 mr-2" />
                    Lịch sử đơn hàng
                  </Button>
                  <Button 
                    variant={activeTab === 'wishlist' ? 'default' : 'ghost'} 
                    className="w-full justify-start"
                    onClick={() => setActiveTab('wishlist')}
                  >
                    <Heart className="h-4 w-4 mr-2" />
                    Danh sách yêu thích
                  </Button>
                  <Button 
                    variant={activeTab === 'recent' ? 'default' : 'ghost'} 
                    className="w-full justify-start"
                    onClick={() => setActiveTab('recent')}
                  >
                    <Eye className="h-4 w-4 mr-2" />
                    Đã xem gần đây
                  </Button>
                  <Button 
                    variant={activeTab === 'settings' ? 'default' : 'ghost'} 
                    className="w-full justify-start"
                    onClick={() => setActiveTab('settings')}
                  >
                    <Settings className="h-4 w-4 mr-2" />
                    Cài đặt
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Main Content */}
          <div className="lg:col-span-3">
            {activeTab === 'profile' && (
              <Card>
                <CardHeader>
                  <div className="flex justify-between items-center">
                    <CardTitle>Thông tin cá nhân</CardTitle>
                    <Button 
                      variant="outline" 
                      onClick={() => setIsEditing(!isEditing)}
                    >
                      {isEditing ? 'Hủy' : 'Chỉnh sửa'}
                    </Button>
                  </div>
                </CardHeader>
                <CardContent className="space-y-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div className="space-y-2">
                      <Label htmlFor="name">Họ và tên</Label>
                      <Input 
                        id="name" 
                        value={user.name} 
                        disabled={!isEditing}
                      />
                    </div>
                    <div className="space-y-2">
                      <Label htmlFor="email">Email</Label>
                      <Input 
                        id="email" 
                        value={user.email} 
                        disabled={!isEditing}
                      />
                    </div>
                    <div className="space-y-2">
                      <Label htmlFor="phone">Số điện thoại</Label>
                      <Input 
                        id="phone" 
                        value={user.phone} 
                        disabled={!isEditing}
                      />
                    </div>
                    <div className="space-y-2">
                      <Label htmlFor="joinDate">Ngày tham gia</Label>
                      <Input 
                        id="joinDate" 
                        value={user.joinDate} 
                        disabled
                      />
                    </div>
                  </div>
                  
                  {/* Stats */}
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <Card>
                      <CardContent className="p-4">
                        <div className="flex items-center space-x-2">
                          <Package className="h-5 w-5 text-gaming-primary" />
                          <div>
                            <p className="text-sm text-muted-foreground">Tổng đơn hàng</p>
                            <p className="text-2xl font-bold">{user.totalOrders}</p>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                    <Card>
                      <CardContent className="p-4">
                        <div className="flex items-center space-x-2">
                          <Star className="h-5 w-5 text-gaming-primary" />
                          <div>
                            <p className="text-sm text-muted-foreground">Tổng chi tiêu</p>
                            <p className="text-2xl font-bold">{user.totalSpent}</p>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  </div>

                  {isEditing && (
                    <div className="flex space-x-4">
                      <Button className="bg-gaming-primary hover:bg-gaming-primary/90">
                        Lưu thay đổi
                      </Button>
                      <Button variant="outline" onClick={() => setIsEditing(false)}>
                        Hủy
                      </Button>
                    </div>
                  )}
                </CardContent>
              </Card>
            )}

            {activeTab === 'orders' && (
              <Card>
                <CardHeader>
                  <CardTitle>Lịch sử đơn hàng</CardTitle>
                </CardHeader>
                <CardContent>
                  <Table>
                    <TableHeader>
                      <TableRow>
                        <TableHead>Mã đơn</TableHead>
                        <TableHead>Sản phẩm</TableHead>
                        <TableHead>Ngày mua</TableHead>
                        <TableHead>Số tiền</TableHead>
                        <TableHead>Trạng thái</TableHead>
                        <TableHead>Hành động</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {orderHistory.map((order) => (
                        <TableRow key={order.id}>
                          <TableCell className="font-medium">{order.id}</TableCell>
                          <TableCell>{order.product}</TableCell>
                          <TableCell>{order.date}</TableCell>
                          <TableCell>{order.amount}</TableCell>
                          <TableCell>
                            <Badge variant={
                              order.status === 'completed' ? 'default' : 'secondary'
                            }>
                              {order.status === 'completed' ? 'Hoàn thành' : 'Đang xử lý'}
                            </Badge>
                          </TableCell>
                          <TableCell>
                            {order.downloadLink && (
                              <Button variant="outline" size="sm">
                                <Download className="h-4 w-4 mr-2" />
                                Tải về
                              </Button>
                            )}
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                </CardContent>
              </Card>
            )}

            {activeTab === 'wishlist' && (
              <Card>
                <CardHeader>
                  <CardTitle>Danh sách yêu thích</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {wishlist.map((item) => (
                      <Card key={item.id}>
                        <CardContent className="p-4">
                          <div className="flex space-x-4">
                            <img 
                              src={item.image} 
                              alt={item.name}
                              className="w-16 h-16 rounded-lg object-cover"
                            />
                            <div className="flex-1">
                              <h3 className="font-semibold">{item.name}</h3>
                              <p className="text-sm text-muted-foreground">{item.game}</p>
                              <p className="text-lg font-bold text-gaming-primary">{item.price}</p>
                            </div>
                          </div>
                          <div className="mt-4 flex space-x-2">
                            <Button 
                              className="flex-1 bg-gaming-primary hover:bg-gaming-primary/90"
                              disabled={!item.inStock}
                            >
                              {item.inStock ? 'Mua ngay' : 'Hết hàng'}
                            </Button>
                            <Button variant="outline">
                              <Heart className="h-4 w-4" />
                            </Button>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {activeTab === 'recent' && (
              <Card>
                <CardHeader>
                  <CardTitle>Đã xem gần đây</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {recentViewed.map((item) => (
                      <Card key={item.id}>
                        <CardContent className="p-4">
                          <div className="flex space-x-4">
                            <img 
                              src={item.image} 
                              alt={item.name}
                              className="w-16 h-16 rounded-lg object-cover"
                            />
                            <div className="flex-1">
                              <h3 className="font-semibold">{item.name}</h3>
                              <p className="text-sm text-muted-foreground">{item.game}</p>
                              <p className="text-lg font-bold text-gaming-primary">{item.price}</p>
                            </div>
                          </div>
                          <div className="mt-4 flex space-x-2">
                            <Link to={`/games/${item.id}`} className="flex-1">
                              <Button className="w-full">
                                Xem chi tiết
                              </Button>
                            </Link>
                            <Button variant="outline">
                              <Heart className="h-4 w-4" />
                            </Button>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {activeTab === 'settings' && (
              <Card>
                <CardHeader>
                  <CardTitle>Cài đặt tài khoản</CardTitle>
                </CardHeader>
                <CardContent className="space-y-6">
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold">Đổi mật khẩu</h3>
                    <div className="grid gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="currentPassword">Mật khẩu hiện tại</Label>
                        <Input id="currentPassword" type="password" />
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="newPassword">Mật khẩu mới</Label>
                        <Input id="newPassword" type="password" />
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="confirmPassword">Xác nhận mật khẩu mới</Label>
                        <Input id="confirmPassword" type="password" />
                      </div>
                      <Button className="bg-gaming-primary hover:bg-gaming-primary/90">
                        Cập nhật mật khẩu
                      </Button>
                    </div>
                  </div>

                  <div className="border-t pt-6">
                    <h3 className="text-lg font-semibold mb-4">Thông báo</h3>
                    <div className="space-y-4">
                      <div className="flex items-center justify-between">
                        <div>
                          <p className="font-medium">Email marketing</p>
                          <p className="text-sm text-muted-foreground">
                            Nhận thông tin về sản phẩm mới và khuyến mãi
                          </p>
                        </div>
                        <Button variant="outline">Bật</Button>
                      </div>
                      <div className="flex items-center justify-between">
                        <div>
                          <p className="font-medium">Thông báo đơn hàng</p>
                          <p className="text-sm text-muted-foreground">
                            Nhận cập nhật về trạng thái đơn hàng
                          </p>
                        </div>
                        <Button variant="outline">Bật</Button>
                      </div>
                    </div>
                  </div>

                  <div className="border-t pt-6">
                    <h3 className="text-lg font-semibold mb-4 text-destructive">Vùng nguy hiểm</h3>
                    <Button variant="destructive">
                      Xóa tài khoản
                    </Button>
                  </div>
                </CardContent>
              </Card>
            )}
          </div>
        </div>
      </div>

      <Footer />
    </div>
  );
};

export default UserDashboard;